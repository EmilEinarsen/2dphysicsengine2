{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/Collision/correction.js","webpack:///./src/js/Collision/detection.js","webpack:///./src/js/Collision/resolve.js","webpack:///./src/js/Strutures/Edges.js","webpack:///./src/js/Strutures/Entities/Entity.js","webpack:///./src/js/Strutures/Entities/types/AABB.js","webpack:///./src/js/Strutures/Entities/types/Circle.js","webpack:///./src/js/Strutures/Entities/types/Point.js","webpack:///./src/js/Strutures/Entities/types/Polygon.js","webpack:///./src/js/Strutures/Entities/types/Rectangle.js","webpack:///./src/js/Strutures/Entities/types/Segment.js","webpack:///./src/js/Strutures/QuadTree.js","webpack:///./src/js/Strutures/Vector.js","webpack:///./src/js/canvas.js","webpack:///./src/js/index.js","webpack:///./src/js/preset.js","webpack:///./src/js/utils/draw.js","webpack:///./src/js/utils/formulas.js","webpack:///./src/js/utils/utils.js"],"names":["correctPosition","ent1","ent2","collisionData","collidee","physics","undefined","collisionPoint","point","getClosestPoint","pos","points","overlap","radius","distance","x","y","angle","atanAngle","add","Math","cos","sin","FORM","AABB","CIRCLE","POINT","POLYGON","RECTANGLE","SEGMENT","detectCollision","debug","errorMessage","result","form","detectAABB","detectPolygonCircle","detectAABBPoint","detectPolygon","detectPolygonLine","detectCircle","detectCirclePoint","detectLineCircle","detectPolygonPoint","detectPoint","detectLinePoint","detectLine","fill","length","forEach","p","p1","p2","r","width","height","c1","c2","d","pythagoras","type","r1","r2","l1","l2","TYPE","COLINEAR","PARALLEL","NONE","INTERSECTING","INTERSECT_EDGE","x1","pos1","y1","x2","pos2","y2","a1","b1","x3","y3","x4","y4","a2","b2","denom","numeA","numeB","uA","uB","l","c","dx","dy","cx","cy","len","dot","poly1","poly2","i","res","Segment","push","poly","Vector","line","detectRectanglePoint","detectRectangle","detectRectangleCircle","resolveCollision","resolveLineCircle","resolveCircle","vel","calcCollision","circle","lineCircle","mult","contact","twoMovingEntitesCollisionVelocityResolution","mass","atan2","m1","v1","o1","m2","v2","o2","PI","Edges","canvas","bottom","apperance","color","left","right","show","entities","entity","top","friction","Entity","vx","vy","acc","ax","ay","PHYSICS","DYNAMIC","force","div","applyForce","preset","constants","g","mu","normal","copy","setMag","rotate","STATIC","prototype","parent","sqrt","rectangle","halfWidth","halfHeight","Circle","strokeWeight","ellipse","Point","Polygon","origin","polygon","map","Rectangle","physicv","degreeToRadian","min","abs","max","rotateRec","stdRotationFormula","offsets","tr","bl","br","QuadTree","boundary","capacity","divided","northEast","northWest","southEast","southWest","contains","subdivide","insert","range","found","intersects","query","boundarys","content","stroke","scale","mag","normalize","Object","create","getPrototypeOf","getOwnPropertyDescriptors","random","document","querySelector","ctx","getContext","mouse","colors","innerWidth","innerHeight","addEventListener","e","m","getMousePosition","init","animate","CENTER","background","mirror","requestAnimationFrame","gravity","j","collision","update","beginPath","arc","closePath","rect","weight","moveTo","lineTo","func","save","restore","defDegree","radianToDegree","radian","degrees","floor","randomColor","fillStyle","translate","strokeStyle","number","lineWidth","window","clientX","mozCurrentTransform","clientY","constrain","n","getLargestEntityLength","minCollisionRange","middleX","middleY","globalQuadTree","reduce","a","b"],"mappings":"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","file":"./js/index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","// Need to research impulses, to build a sequential impulse solver\r\n// 'physics engine it would be handled by the contraint solver. \r\n// ...one of the easiest to understand is a sequential impulse solver.'\r\n\r\nimport { atanAngle } from \"../utils/formulas\"\r\nimport { distance, getClosestPoint } from \"../utils/utils\"\r\n\r\nexport default function correctPosition(ent1, ent2, collisionData) {\r\n\r\n    let collidee = ent1.physics === 'STATIC' ? ent2.physics === 'STATIC' ? undefined : ent2 : ent1\r\n\r\n    if(!collidee) return\r\n\r\n    let \r\n        collisionPoint = collisionData.point ?? getClosestPoint(collidee.pos, collisionData.points),\r\n        overlap = collidee.radius - distance(collidee.pos.x, collisionPoint.x, collidee.pos.y, collisionPoint.y),\r\n        angle = atanAngle(collidee.pos.x - collisionPoint.x, collidee.pos.y - collisionPoint.y)\r\n        \r\n    collidee.pos.add({ x: overlap * Math.cos(angle), y: overlap * Math.sin(angle) })\r\n}","import Segment from \"../Strutures/Entities/types/Segment\"\r\nimport Vector from \"../Strutures/Vector\"\r\nimport { point } from \"../utils/draw\"\r\nimport { pythagoras } from \"../utils/formulas\"\r\nimport { distance, fill } from \"../utils/utils\"\r\n\r\n/**\r\n * \r\n * Useful source for extended collision detection\r\n * https://github.com/davidfig/intersects\r\n * \r\n */\r\n\r\nexport const FORM = {\r\n    AABB: 'AABB',\r\n    CIRCLE: 'CIRCLE',\r\n    POINT: 'POINT',\r\n    POLYGON: 'POLYGON',\r\n    RECTANGLE: 'RECTANGLE',\r\n    SEGMENT: 'SEGMENT'\r\n}\r\n\r\nexport default function detectCollision(ent1, ent2, debug) {\r\n    let \r\n        errorMessage = [ 'Collider: NOT A VALID FORM', 'Collidee: NOT A VALID FORM' ],\r\n        result =\r\n            ent1.form === FORM.AABB ?\r\n                ent2.form === FORM.AABB ? detectAABB(ent1, ent2)\r\n                    : ent2.form === FORM.CIRCLE ? detectPolygonCircle(ent1, ent2)\r\n                    : ent2.form === FORM.POINT ? detectAABBPoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.SEGMENT ? detectPolygonLine(ent1, ent2)  \r\n                    : errorMessage[1]\r\n            : ent1.form === FORM.CIRCLE ?\r\n                ent2.form === FORM.AABB ? detectPolygonCircle(ent2, ent1)\r\n                    : ent2.form === FORM.CIRCLE ? detectCircle(ent1, ent2)\r\n                    : ent2.form === FORM.POINT ? detectCirclePoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygonCircle(ent2, ent1)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygonCircle(ent2, ent1)\r\n                    : ent2.form === FORM.SEGMENT ? detectLineCircle(ent2, ent1)\r\n                    : errorMessage[1]\r\n            : ent1.form === FORM.POINT ?\r\n                ent2.form === FORM.AABB ? detectPolygonPoint(ent2, ent1)\r\n                    : ent2.form === FORM.CIRCLE ? detectCirclePoint(ent2, ent1)\r\n                    : ent2.form === FORM.POINT ? detectPoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygonPoint(ent2, ent1)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygonPoint(ent2, ent1)\r\n                    : ent2.form === FORM.SEGMENT ? detectPolygonPoint(ent2, ent1)\r\n                    : errorMessage[1]\r\n            : ent1.form === FORM.POLYGON ? \r\n                ent2.form === FORM.AABB ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.CIRCLE ? detectPolygonCircle(ent1, ent2)\r\n                    : ent2.form === FORM.POINT ? detectPolygonPoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.SEGMENT ? detectPolygonLine(ent1, ent2)\r\n                    : errorMessage[1]\r\n            : ent1.form === FORM.RECTANGLE ? \r\n                ent2.form === FORM.AABB ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.CIRCLE ? detectPolygonCircle(ent1, ent2)\r\n                    : ent2.form === FORM.POINT ? detectPolygonPoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygon(ent1, ent2)\r\n                    : ent2.form === FORM.SEGMENT ? detectPolygonLine(ent1, ent2)\r\n                    : errorMessage[1]\r\n            : ent1.form === FORM.SEGMENT ? \r\n                ent2.form === FORM.AABB ? detectPolygonLine(ent2, ent1)\r\n                    : ent2.form === FORM.CIRCLE ? detectLineCircle(ent1, ent2)\r\n                    : ent2.form === FORM.POINT ? detectLinePoint(ent1, ent2)\r\n                    : ent2.form === FORM.POLYGON ? detectPolygonLine(ent2, ent1)\r\n                    : ent2.form === FORM.RECTANGLE ? detectPolygonLine(ent2, ent1)\r\n                    : ent2.form === FORM.SEGMENT ? detectLine(ent1, ent2)\r\n                    : errorMessage[1]\r\n            : errorMessage[0]\r\n\r\n    debug && result?.point && (point(result.point.x, result.point.y, 5), fill('red'))\r\n    debug && result?.points?.length && result.points.forEach(p => (point(p.x, p.y, 5), fill('red')))\r\n\r\n    return result\r\n}\r\n\r\n\r\nconst detectPoint = (p1, p2) =>\r\n    (p1.pos.x - p2.pos.x) === 0 && (p1.pos.y - p2.pos.y) === 0\r\n\r\nconst detectAABBPoint = (r, p) =>\r\n    r.pos.x <= p.x && p.x <= r.pos.x + r.width\r\n    && r.pos.y <= p.y && p.y <= r.pos.y + r.height\r\n\r\nconst detectCircle = (c1, c2) => {\r\n    const d = {\r\n        x: c1.pos.x - c2.pos.x,\r\n        y: c1.pos.y - c2.pos.y\r\n    }\r\n    return pythagoras(d.x, d.y) < (c1.radius + c2.radius) ? {  type: 'INTERSECTING', point: { x: c1.pos.x + d.x/2, y: c1.pos.y - d.y/2 } } : { type: 'NONE' }\r\n}\r\n    \r\n\r\nconst detectCirclePoint = (c1, p) =>\r\n    distance(c1.pos.x, p.x ?? p.pos.x, c1.pos.y, p.y ?? p.pos.y) < c1.radius\r\n\r\nconst detectAABB = (r1, r2) => \r\n    r1.pos.x + r1.width >= r2.pos.x && r1.pos.x <= r2.pos.x + r2.width\r\n    && r1.pos.y + r1.height >= r2.pos.y && r1.pos.y <= r2.pos.y + r2.height\r\n\r\nconst detectLine = (l1, l2) => {\r\n    // https://github.com/psalaets/line-intersect/blob/master/src/check-intersection.js\r\n    // For an explination, checkout - https://www.youtube.com/watch?v=A86COO8KC58&t=56s\r\n    // utilizes the standard formula \r\n    // Ax + By = C\r\n    const \r\n        TYPE = {\r\n            COLINEAR: 'COLINEAR',\r\n            PARALLEL: 'PARALLEL',\r\n            NONE: 'NONE',\r\n            INTERSECTING: 'INTERSECTING',\r\n            INTERSECT_EDGE: 'INTERSECT_EDGE'\r\n        },\r\n        x1 = l1.pos1.x, y1 = l1.pos1.y,\r\n        x2 = l1.pos2.x, y2 = l1.pos2.y,\r\n        a1 = y2 - y1, b1 = x2 - x1,\r\n\r\n        x3 = l2.pos1.x, y3 = l2.pos1.y,\r\n        x4 = l2.pos2.x, y4 = l2.pos2.y,\r\n        a2 = y4 - y3, b2 = x4 - x3,\r\n\r\n        denom = (a2 * b1) - (b2 * a1),\r\n        numeA = (b2 * (y1 - y3)) - (a2 * (x1 - x3)),\r\n        numeB = (b1 * (y1 - y3)) - (a1 * (x1 - x3))\r\n\r\n    if (denom == 0)\r\n        return numeA == 0 && numeB == 0 \r\n            ? { type: TYPE.COLINEAR } \r\n            : { type: TYPE.PARALLEL }\r\n\r\n    const \r\n        uA = numeA / denom,\r\n        uB = numeB / denom\r\n    \r\n    return uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1 \r\n        ? { \r\n            type: uA === 0 | uA === 1 || uB === 0 | uB === 1 ? TYPE.INTERSECT_EDGE : TYPE.INTERSECTING, \r\n            point: { x: x1 + (uA * b1), y: y1 + (uA * a1) } \r\n        } : { type: TYPE.NONE }\r\n}\r\n\r\nconst detectLinePoint = (l, p) =>\r\n    l.length >= (distance(l.pos1.x, p.x ?? p.pos.x, l.pos1.y, p.y ?? p.pos.y) + distance(p.x ?? p.pos.x, l.pos2.x, p.y ?? p.pos.y, l.pos2.y))\r\n    \r\n\r\nconst detectLineCircle = (l, c) => {\r\n    \r\n    \r\n    let\r\n        x1 = l.pos1.x, y1 = l.pos1.y,\r\n        x2 = l.pos2.x, y2 = l.pos2.y,\r\n        dx = x2 - x1, dy = y2 - y1,\r\n        cx = c.pos.x, cy = c.pos.y,\r\n        len = l.length,\r\n        dot = (((cx - x1)*dx) + ((cy - y1)*dy)) / (len*len),\r\n        point = { x: x1 + (dot * (x2 - x1)), y: y1 + (dot * (y2 - y1)) }\r\n\r\n    return detectLinePoint(l, point) && detectCirclePoint(c, point) ? { type: 'INTERSECTING', point } \r\n        : detectCirclePoint(c, l.pos1) ? { type: 'INTERSECTING', point: l.pos1 }\r\n        : detectCirclePoint(c, l.pos2) ? { type: 'INTERSECTING', point: l.pos2 }\r\n        : { type: 'NONE' }\r\n}\r\n\r\n\r\n\r\nconst detectPolygon = (poly1, poly2) => {\r\n    poly1 = poly1.points\r\n    let points = []\r\n    \r\n    for ( let i = 0; i < poly1.length; i++ ) {\r\n        let b1 = poly1[i]\r\n        let b2 = poly1[(i+1) % poly1.length]\r\n        let res = detectPolygonLine(poly2, new Segment({ pos1: b1, pos2: b2 }))\r\n        \r\n        res.type === 'INTERSECTING' && points.push(...res.points)\r\n    }\r\n    return !points.length ? { type: 'NONE' } : { type: 'INTERSECTING', points } \r\n}\r\n\r\nconst detectPolygonPoint = (poly, p) => {\r\n    let \r\n        l = new Segment({ pos1: new Vector(0, 0), pos2: new Vector(p.x ?? p.pos.x, p.y ?? p.pos.y)}),\r\n        res = detectPolygonLine(poly, l)\r\n    \r\n    return res.type === 'NONE' ? res \r\n        : res.type === 'INTERSECTING' && res.points.length%2 ? { type: res.type, point: p?.pos ?? p } \r\n        : { ...res, type: 'NONE' }\r\n}\r\n\r\nconst detectPolygonLine = (poly, line) => {\r\n    poly = poly.points\r\n    let points = []\r\n\r\n    for ( let i = 0; i < poly.length; i++ ) {\r\n        let b1 = poly[i]\r\n        let b2 = poly[(i+1) % poly.length]\r\n        let res = detectLine(line, new Segment({ pos1: b1, pos2: b2 }))\r\n\r\n        res.type === 'INTERSECTING' && points.push(res.point)\r\n    }\r\n    \r\n    if(points.length < 2) {\r\n        // Covers \"edgecases\"\r\n        poly.forEach(p => detectLinePoint(line, p) && points.push(p))\r\n\r\n        // Covers lines inside polygon, however not a viable solution sonsidering polygon-polygon detection\r\n        /* points.length < 2 && detectPolygonPoint(poly, line.pos1) && points.push(line.pos1)\r\n        points.length < 2 && detectPolygonPoint(poly, line.pos2) && points.push(line.pos2) */\r\n    }\r\n\r\n    return !points.length ? { type: 'NONE' } : { type: 'INTERSECTING', points } \r\n}\r\n\r\nconst detectPolygonCircle = (poly, c) => {\r\n    poly = poly.points\r\n    let points = []\r\n\r\n    for ( let i = 0; i < poly.length; i++ ) {\r\n        let b1 = poly[i]\r\n        let b2 = poly[(i+1) % poly.length]\r\n        let res = detectLineCircle(new Segment({ pos1: b1, pos2: b2 }), c)\r\n\r\n        if(res.type === 'INTERSECTING') points.push(res.point)\r\n    }\r\n\r\n    return !points.length ? { type: 'NONE' } : { type: 'INTERSECTING', points } \r\n}\r\n\r\nconst detectRectanglePoint = (r, p) => detectPolygonPoint(r, p)\r\n\r\nconst detectRectangle = (r1, r2) => detectAABB(r1.AABB(), r2.AABB()) && detectPolygon(r1, r2)\r\n\r\nconst detectRectangleCircle = (r, c) => detectPolygonCircle(r, c)","import Vector from \"../Strutures/Vector\"\r\nimport { atanAngle, pythagoras } from \"../utils/formulas\"\r\nimport { getClosestPoint } from \"../utils/utils\"\r\nexport const FORM = {\r\n    AABB: 'AABB',\r\n    CIRCLE: 'CIRCLE',\r\n    POINT: 'POINT',\r\n    POLYGON: 'POLYGON',\r\n    RECTANGLE: 'RECTANGLE',\r\n    SEGMENT: 'SEGMENT'\r\n}\r\nexport default function resolveCollision(ent1, ent2, collisionData) {\r\n\t\r\n\tlet \r\n        errorMessage = [ 'Collider: NOT A VALID FORM', 'Collidee: NOT A VALID FORM' ],\r\n        result =\r\n            ent1.form === FORM.CIRCLE ?\r\n                    ent2.form === FORM.SEGMENT ? resolveLineCircle(ent2, ent1, collisionData)\r\n\t\t\t\t\t: ent2.form === FORM.RECTANGLE ? resolveLineCircle(ent2, ent1, collisionData)\r\n\t\t\t\t\t: ent2.form === FORM.CIRCLE ? resolveCircle(ent1, ent2, collisionData)\r\n                    : errorMessage[1]\r\n\t\t\t: errorMessage[0]\r\n\t\t\t\r\n\treturn result\r\n}\r\n\r\nconst resolveCircle = (c1, c2) => {\r\n\tlet vel = calcCollision.circle(c1, c2)\r\n\t\r\n    c1.vel = vel.c1\r\n    c2.vel = vel.c2\r\n}\r\n\r\nconst resolveLineCircle = (l, c, collisionData) => {\r\n\t\r\n\tlet vel = calcCollision.lineCircle(l, c, collisionData.point ?? getClosestPoint(c.pos, collisionData.points))\r\n\t\r\n    l.vel = vel.l\r\n\tc.vel = vel.c\r\n\tc.vel.mult(1)\r\n}\r\n\r\nconst calcCollision = {\r\n\tcircle: (c1, c2) => {\r\n\t\tconst angle = {\r\n\t\t\tc1: atanAngle(c1.vel.x, c1.vel.y),\r\n\t\t\tc2: atanAngle(c2.vel.x, c2.vel.y),\r\n\t\t\tcontact: atanAngle(c1.pos.x - c2.pos.x, c1.pos.y - c2.pos.y)\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tc1: twoMovingEntitesCollisionVelocityResolution(c1.mass, pythagoras(c1.vel.x, c1.vel.y), angle.c1, c2.mass, pythagoras(c2.vel.x, c2.vel.y), angle.c2, angle.contact),\r\n\t\t\tc2: twoMovingEntitesCollisionVelocityResolution(c2.mass, pythagoras(c2.vel.x, c2.vel.y), angle.c2, c1.mass, pythagoras(c1.vel.x, c1.vel.y), angle.c1, angle.contact)\r\n\t\t}\r\n    },\r\n    lineCircle: (l, c, p) => {\r\n\t\tconst angle = {\r\n\t\t\tl: Math.atan2(l.vel.y, l.vel.x),\r\n\t\t\tc: Math.atan2(c.vel.y, c.vel.x),\r\n\t\t\tcontact: Math.atan2( (p.y - c.pos.y), (p.x - c.pos.x) )\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tl: twoMovingEntitesCollisionVelocityResolution(l.mass, pythagoras(l.vel.x, l.vel.y), angle.l, c.mass, pythagoras(c.vel.x, c.vel.y), angle.c, angle.contact),\r\n\t\t\tc: twoMovingEntitesCollisionVelocityResolution(c.mass, pythagoras(c.vel.x, c.vel.y), angle.c, l.mass, pythagoras(l.vel.x, l.vel.y), angle.l, angle.contact)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst twoMovingEntitesCollisionVelocityResolution = (m1, v1, o1, m2, v2, o2, c) => new Vector(\r\n    (((((v1*Math.cos(o1-c))*(m1-m2))+(2*m2*v2*Math.cos(o2-c)))/(m1+m2))*Math.cos(c))+(v1*Math.sin(o1-c)*Math.cos(c+(Math.PI/2))),\r\n    (((((v1*Math.cos(o1-c))*(m1-m2))+(2*m2*v2*Math.cos(o2-c)))/(m1+m2))*Math.sin(c))+(v1*Math.sin(o1-c)*Math.sin(c+(Math.PI/2)))\r\n)","import { canvas } from \"../canvas\"\r\nimport { fill } from \"../utils/utils\"\r\nimport AABB from \"./Entities/types/AABB\"\r\n\r\nexport default class Edges {\r\n    constructor() {\r\n        this.width = canvas.width\r\n        this.height = canvas.height\r\n        this.bottom = new AABB({ x: 0, y: this.height - 20, width: this.width, height: 20, apperance: { color: 'grey' } })\r\n        this.left = new AABB({ x: 0, y: 0, width: 20, height: this.height, apperance: { color: 'grey' } })\r\n        this.right = new AABB({ x: this.width - 20, y: 0, width: 20, height: this.height, apperance: { color: 'grey' } })\r\n    }\r\n\r\n    show() {\r\n        this.bottom && (this.bottom.show(), fill(this.bottom.color))\r\n        this.left && (this.left.show(), fill(this.left.color))\r\n        this.right && (this.right.show(), fill(this.right.color))\r\n    }\r\n\r\n    update(entities) {\r\n        entities.forEach(entity => {\r\n            \r\n            if(entity.bottom >= this.bottom.top) {\r\n                entity.vel.y *= -1\r\n                entity.friction(this.bottom)\r\n            }\r\n\r\n            if(entity.right >= this.right.left) {\r\n                entity.vel.x *= -1\r\n                entity.friction(this.right)\r\n            } else if(entity.left <= this.left.right) {\r\n                entity.vel.x *= -1\r\n                entity.friction(this.left)\r\n            }\r\n\r\n        })\r\n    }\r\n    \r\n}","import correctPosition from \"../../Collision/correction\"\r\nimport detectCollision from \"../../Collision/detection\"\r\nimport resolveCollision from \"../../Collision/resolve\"\r\nimport preset from \"../../preset\"\r\nimport Vector from \"../Vector\"\r\n\r\nexport default class Entity {\r\n    constructor({ pos, x, y, vel, vx, vy, acc, ax, ay, mass, physics }) {\r\n        this.pos = pos ?? new Vector(x, y)\r\n        this.vel = vel ?? new Vector(vx, vy)\r\n        this.acc = acc ?? new Vector(ax, ay)\r\n        this.mass = mass ?? 1\r\n        this.physics = physics || PHYSICS.DYNAMIC\r\n    }\r\n\r\n    get force() { return this.acc.copy().mult(this.mass) }\r\n\r\n    applyForce(force) {\r\n        this.acc.add(Vector.div(force, this.mass))\r\n    }\r\n\r\n    gravity() {\r\n        this.applyForce(new Vector(0, preset.physics.constants.g).mult(this.mass))\r\n    }\r\n\r\n    friction(entity) {\r\n        if(!entity) return\r\n        let \r\n            mu = 0.1,\r\n            angle = entity.angle || 0,\r\n            normal = this.force.y * this.mass,\r\n            friction = this.vel.copy().setMag(-1).rotate(-angle).setMag(mu * normal)\r\n            \r\n        this.applyForce(friction)\r\n    }\r\n    \r\n    intersects(entity, debug) {\r\n        return detectCollision(this, entity, debug)\r\n    }\r\n\r\n    collision(entity, collisionData) {\r\n        this.friction(entity)\r\n        resolveCollision(this, entity, collisionData)\r\n        correctPosition(this, entity, collisionData)\r\n    }\r\n}\r\n\r\nlet PHYSICS = {\r\n    STATIC: 'STATIC',\r\n    DYNAMIC: 'DYNAMIC'\r\n}\r\n\r\nEntity.prototype.PHYSICS = PHYSICS","import Entity from \"../Entity\"\r\nimport { rectangle } from \"../../../utils/draw\"\r\nimport detectCollision, { FORM } from \"../../../Collision/detection\"\r\n\r\nexport default class AABB extends Entity {\r\n    constructor({ width, height, apperance = {}, ...parent }) {\r\n        super(parent)\r\n        this.form = FORM.AABB\r\n        this.width = width ?? Math.sqrt(this.mass) * 20\r\n        this.height = height ?? Math.sqrt(this.mass) * 20\r\n        this.color = apperance.color || '#fff'\r\n    }\r\n\r\n    get halfWidth() { return this.width/2 }\r\n\tget halfHeight() { return this.height/2 }\r\n\tget left() { return this.pos.x }\r\n\tget right() { return this.pos.x + this.width }\r\n\tget top() { return this.pos.y }\r\n    get bottom() { return this.pos.y + this.height }\r\n    get middleX() { return this.pos.x + this.halfWidth }\r\n    get middleY() { return this.pos.y + this.halfHeight }\r\n\r\n    get points() {\r\n        return [\r\n            { x: this.left, y: this.top },\r\n            { x: this.right, y: this.top },\r\n            { x: this.right, y: this.bottom },\r\n            { x: this.left, y: this.bottom },\r\n        ]\r\n    }\r\n    \r\n    contains(point) {\r\n        return detectCollision(this, point)\r\n    }\r\n\r\n\tshow() {\r\n        rectangle(this.pos.x, this.pos.y, this.width, this.height)\r\n\t}\r\n}","import Entity from \"../Entity\"\r\nimport { ellipse } from \"../../../utils/draw\"\r\nimport Vector from \"../../Vector\"\r\nimport { FORM } from \"../../../Collision/detection\"\r\n\r\nexport default class Circle extends Entity {\r\n    constructor({ apperance = {}, ...parent }) {\r\n\t\tsuper(parent)\r\n\t\tthis.form = FORM.CIRCLE\r\n        this.radius = Math.sqrt(this.mass) * 10\r\n        this.color = apperance.color ?? '#fff'\r\n        this.strokeWeight = apperance.strokeWeight ?? this.radius * .2\r\n\t}\r\n\r\n\tget left() { return this.pos.x - this.radius }\r\n\tget right() { return this.pos.x + this.radius }\r\n\tget top() { return this.pos.y - this.radius }\r\n\tget bottom() { return this.pos.y + this.radius }\r\n\t\r\n    update() {\r\n\t\tif(this.physics === this.PHYSICS.DYNAMIC) {\r\n\t\t\tthis.vel.add(this.acc)\r\n\t\t\tthis.pos.add(this.vel)\r\n\t\t\tthis.acc = new Vector()\r\n\t\t}\r\n\t}\r\n\r\n\tshow() {\r\n\t\tellipse(this.pos.x, this.pos.y, this.radius)\r\n\t}\r\n}","import Entity from \"../Entity\"\r\nimport { point } from \"../../../utils/draw\"\r\nimport { fill } from \"../../../utils/utils\"\r\nimport { FORM } from \"../../../Collision/detection\"\r\n\r\nexport default class Point extends Entity {\r\n    constructor({ apperance = {}, ...parent }) {\r\n        super(parent)\r\n        this.form = FORM.POINT\r\n        this.strokeWeight = apperance.strokeWeight || 3\r\n        this.color = apperance.color || '#fff'\r\n    }\r\n\r\n    show() {\r\n        point(this.pos.x, this.pos.y, this.strokeWeight)\r\n        fill(this.color)\r\n    }\r\n}","import { FORM } from \"../../../Collision/detection\"\r\nimport { polygon } from \"../../../utils/draw\"\r\nimport Entity from \"../Entity\"\r\n\r\nexport default class Polygon extends Entity {\r\n    constructor({ points, apperance = {}, ...parent }) {\r\n        super(parent)\r\n        this.form = FORM.POLYGON\r\n        this.origin = points.length ? points : []\r\n        this.color = apperance.color || '#fff'\r\n    }\r\n\r\n    get points() {\r\n        return this.origin.map(p => ({ x: p.x + this.pos.x, y: p.y + this.pos.y }))\r\n    }\r\n\r\n    show() {\r\n        polygon(this.points)\r\n    }\r\n}","import Entity from \"../Entity\"\r\nimport { point, rotateRec } from \"../../../utils/draw\"\r\nimport { degreeToRadian, stdRotationFormula } from \"../../../utils/formulas\"\r\nimport { FORM } from \"../../../Collision/detection\"\r\nimport AABB from \"./AABB\"\r\nimport Vector from \"../../Vector\"\r\nimport { fill } from \"../../../utils/utils\"\r\n\r\nexport default class Rectangle extends Entity {\r\n    constructor({ width, height, angle = 0, apperance = {}, ...parent }) {\r\n        super(parent)\r\n        this.physicv = this.PHYSICS.DYNAMIC\r\n        this.form = FORM.RECTANGLE\r\n        this.width = width ?? Math.sqrt(this.mass) * 20\r\n        this.height = height ?? Math.sqrt(this.mass) * 20\r\n        this.angle = degreeToRadian(-angle%360)\r\n        this.color = apperance.color || '#fff'\r\n    }\r\n\r\n    get halfWidth() { return this.width/2 }\r\n    get halfHeight() { return this.height/2 }\r\n    get middleX() { return this.pos.x + stdRotationFormula(this.halfWidth, this.halfHeight, Math.PI*2-this.angle).x }\r\n    get middleY() { return this.pos.y + stdRotationFormula(this.halfWidth, this.halfHeight, Math.PI*2-this.angle).y }\r\n    get points() {\r\n        let offsets = {\r\n            tr: stdRotationFormula(this.width, 0, Math.PI*2-this.angle),\r\n            bl: stdRotationFormula(1, this.height, Math.PI*2-this.angle),\r\n            br: stdRotationFormula(this.width, this.height, Math.PI*2-this.angle),\r\n        }\r\n            \r\n        return [\r\n            { x: this.pos.x, y: this.pos.y },\r\n            { x: this.pos.x + offsets.tr.x, y: this.pos.y + offsets.tr.y},\r\n            { x: this.pos.x + offsets.br.x, y: this.pos.y + offsets.br.y },\r\n            { x: this.pos.x + offsets.bl.x, y: this.pos.y + offsets.bl.y },\r\n        ]\r\n    }\r\n\r\n    mirror() {\r\n        this.angle = Math.PI - this.angle\r\n        return this\r\n    }\r\n\r\n    AABB() {\r\n        let points = this.points\r\n        points = { x: points.map(p => p.x), y: points.map(p => p.y) }\r\n        let\r\n            pos = new Vector(Math.min(...points.x), Math.min(...points.y)),\r\n            width = Math.abs(pos.x - Math.max(...points.x)),\r\n            height = Math.abs(pos.y - Math.max(...points.y))\r\n\r\n        return new AABB({ pos, height, width })\r\n    }\r\n\r\n    contains(point) {\r\n        return detectRectanglePoint(this, point)\r\n    }\r\n\r\n    update() {\r\n        if(this.physics === this.PHYSICS.DYNAMIC) {\r\n\t\t\tthis.vel.add(this.acc)\r\n\t\t\tthis.pos.add(this.vel)\r\n\t\t\tthis.acc = new Vector()\r\n\t\t}\r\n    }\r\n\r\n\tshow() {\r\n        /* this.points.forEach(p => (point(p.x, p.y, 5), fill('#fff')))\r\n        point(this.middleX, this.middleY, 5), fill('#fff') */\r\n        rotateRec(this.pos.x, this.pos.y, this.width, this.height, this.angle)\r\n        \r\n\t}\r\n}","import { line } from \"../../../utils/draw\"\r\nimport Vector from \"../../Vector\"\r\nimport { distance } from \"../../../utils/utils\"\r\nimport detectCollision, { FORM } from \"../../../Collision/detection\"\r\n\r\nexport default class Segment {\r\n    constructor({ pos1, x1, y1, pos2, x2, y2, vel, vx, vy, mass, apperance = {} }) {\r\n        this.form = FORM.SEGMENT\r\n        this.pos1 = pos1 || new Vector(x1, y1)\r\n        this.pos2 = pos2 || new Vector(x2, y2)\r\n        this.vel = vel || new Vector(vx, vy)\r\n        this.mass = mass || 1\r\n        this.color = apperance.color || '#fff'\r\n        this.strokeWeight = apperance.strokeWeight || 1\r\n    }\r\n\r\n    mirror() {\r\n        let p = this.pos1\r\n        this.pos1 = this.pos2\r\n        this.pos2 = p\r\n        return this\r\n    }\r\n\r\n    intersects(entity, debug) {\r\n        return detectCollision(this, entity, debug)\r\n    }\r\n\r\n    get angle() {\r\n        return Math.atan2(this.pos2.y - this.pos1.y, this.pos2.x - this.pos1.x)\r\n    }\r\n\r\n    get length() {\r\n        return distance(this.pos1.x, this.pos2.x, this.pos1.y, this.pos2.y)\r\n    }\r\n\r\n    gravity() {\r\n        \r\n    }\r\n    \r\n    friction() {\r\n        \r\n    }\r\n\r\n    update() {\r\n        \r\n    }\r\n\r\n    collision() {\r\n        \r\n    }\r\n\r\n\tshow() {\r\n        line(this.pos1.x, this.pos1.y, this.pos2.x, this.pos2.y)\r\n\t}\r\n}","import AABB from \"./Entities/types/AABB\"\r\nimport { point, rectangle } from \"../utils/draw\"\r\nimport { fill, stroke, strokeWeight } from \"../utils/utils\"\r\nimport Vector from \"./Vector\"\r\n\r\nexport default class QuadTree {\r\n    constructor(boundary, capacity) {\r\n        this.boundary = boundary\r\n        this.capacity = capacity\r\n        this.entities = []\r\n        this.divided = false\r\n    }\r\n\r\n    subdivide() {\r\n        this.northEast = new QuadTree(\r\n            new AABB({\r\n                pos: Vector.add(this.boundary.pos, { x: this.boundary.width/2, y: 0 }),\r\n                width: this.boundary.width/2, height: this.boundary.height/2\r\n            }), this.capacity\r\n        )\r\n        this.northWest = new QuadTree(\r\n            new AABB({\r\n                pos: Vector.add(this.boundary.pos, { x: 0, y: 0 }),\r\n                width: this.boundary.halfWidth, height: this.boundary.halfHeight\r\n            }), this.capacity\r\n        )\r\n        this.southEast = new QuadTree(\r\n            new AABB({\r\n                pos: Vector.add(this.boundary.pos, { x: this.boundary.halfWidth, y: this.boundary.halfHeight }),\r\n                width: this.boundary.halfWidth, height: this.boundary.halfHeight\r\n            }), this.capacity\r\n        )\r\n        this.southWest = new QuadTree(\r\n            new AABB({\r\n                pos: Vector.add(this.boundary.pos, { x: 0, y: this.boundary.halfHeight }),\r\n                width: this.boundary.halfWidth, height: this.boundary.halfHeight\r\n            }), this.capacity\r\n        )\r\n        \r\n        this.divided = true\r\n    }\r\n\r\n    insert(entity) {\r\n        \r\n        if(!this.boundary.contains(entity.pos)) return false\r\n        if(this.entities.length < this.capacity) return this.entities.push(entity)\r\n        \r\n        !this.divided && this.subdivide()\r\n\r\n        !this.northEast.insert(entity) \r\n            && !this.northWest.insert(entity)\r\n            && !this.southEast.insert(entity)\r\n            && this.southWest.insert(entity)\r\n    }\r\n\r\n    query(range, found = []) {\r\n        if(!this.boundary.intersects(range)) return\r\n        else {\r\n            for(let p of this.entities)\r\n                range.contains(p.pos) && found.push(p)\r\n            \r\n            if(this.divided) {\r\n                this.northEast.query(range, found) \r\n                this.northWest.query(range, found)\r\n                this.southEast.query(range, found)\r\n                this.southWest.query(range, found)\r\n            }\r\n        }\r\n        return found\r\n    }\r\n\r\n    show({ boundarys = true, content = true } = {}) {\r\n        this.boundary.show()\r\n        strokeWeight(1)\r\n        stroke('#fff')\r\n\r\n        if(this.divided) {\r\n            this.northEast.show({ boundarys, content })\r\n            this.northWest.show({ boundarys, content })\r\n            this.southEast.show({ boundarys, content })\r\n            this.southWest.show({ boundarys, content })\r\n        }\r\n\r\n        content && this.entities.length && this.entities.forEach(entity => (entity.show(), fill(entity.color)))\r\n    }\r\n}","import { pythagoras, stdRotationFormula } from \"../utils/formulas\"\r\nimport { random } from \"../utils/utils\"\r\n\r\nexport default class Vector {\r\n\tconstructor(x, y) {\r\n\t\tthis.x = x ?? 0\r\n\t\tthis.y = y ?? 0\r\n\t}\r\n\r\n\tadd(p) {\r\n\t\tthis.x += p.x\r\n\t\tthis.y += p.y\r\n\t\treturn this\r\n\t}\r\n\r\n\tsub(p) {\r\n\t\tthis.x -= p.x\r\n\t\tthis.y -= p.y\r\n\t\treturn this\r\n\t}\r\n\r\n\tmult(scale) {\r\n\t\tthis.x *= scale\r\n\t\tthis.y *= scale\r\n\t\treturn this\r\n\t}\r\n\r\n\tdiv(scale) {\r\n\t\tthis.x /= scale\r\n\t\tthis.y /= scale\r\n\t\treturn this\r\n\t}\r\n\r\n\tmag() {\r\n\t\treturn pythagoras(this.x, this.y)\r\n\t}\r\n\r\n\tmagSq() {\r\n\t\treturn this.mag()**2\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tthis.div(this.mag())\r\n\t\treturn this\r\n\t}\r\n\r\n\tset(x, y) {\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\treturn this\r\n\t}\r\n\r\n\tsetMag(scale) {\r\n\t\tthis.normalize().mult(scale)\r\n\t\treturn this\r\n\t}\r\n\r\n\tlimit(scale) {\r\n\t\tthis.mag() > scale && this.setMag(scale)\r\n\t\treturn this\r\n\t}\r\n\r\n\trotate(angle) {\r\n\t\tstdRotationFormula(this.x, this.y, angle)\r\n\t\treturn this\r\n\t}\r\n\r\n\tcopy() {\r\n\t\treturn Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this))\r\n\t}\r\n\r\n\tstatic add(p1, p2) {\r\n\t\treturn new Vector(p1.x + p2.x, p1.y + p2.y)\r\n\t}\r\n\r\n\tstatic sub(p1, p2) {\r\n\t\treturn new Vector(p1.x - p2.x, p1.y - p2.y)\r\n\t}\r\n\r\n\tstatic div(p1, scale) {\r\n\t\treturn new Vector( p1.x / scale, p1.y / scale )\r\n\t}\r\n\r\n\tstatic mult(p1, scale) {\r\n\t\treturn new Vector( p1.x * scale, p1.y * scale )\r\n\t}\r\n\r\n\tstatic random() {\r\n\t\treturn new Vector(random(-100, 100)/100, random(-100, 100)/100)\r\n\t}\r\n}","import { getMousePosition } from \"./utils/utils\"\r\n\r\nexport const canvas = document.querySelector('canvas')\r\nexport const ctx = canvas.getContext('2d')\r\nexport const mouse = {}\r\nexport const colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\r\ncanvas.width = innerWidth\r\ncanvas.height = innerHeight\r\n\r\naddEventListener('mousemove', e => {\r\n\tlet m  = getMousePosition(e)\r\n\tmouse.x = m[0]\r\n\tmouse.y = m[1]\r\n})\r\n\r\n","import { background, CENTER, fill, getLargestEntityLength, globalQuadTree, minCollisionRange, random, randomColor, stroke, strokeWeight } from './utils/utils'\r\nimport { canvas, colors, mouse } from './canvas'\r\nimport QuadTree from './Strutures/QuadTree'\r\nimport Circle from './Strutures/Entities/types/Circle'\r\nimport Rectangle from './Strutures/Entities/types/Rectangle'\r\nimport Point from './Strutures/Entities/types/Point'\r\nimport Vector from './Strutures/Vector'\r\nimport Edges from './Strutures/Edges'\r\nimport AABB from './Strutures/Entities/types/AABB'\r\nimport Segment from './Strutures/Entities/types/Segment'\r\nimport Polygon from './Strutures/Entities/types/Polygon'\r\nimport { point } from './utils/draw'\r\n\r\nfunction init() {\r\n\tanimate.entities = []\r\n\tlet c = CENTER()\r\n\tbackground('#000')\r\n\r\n\tanimate.entities.push(\r\n\t\tnew Circle({ x: c.x + 450 - 180, y: c.y, mass: 10, vx: -.5 }),\r\n\t\tnew Rectangle({ pos: new Vector(c.x - 200, c.y + 200), physics: 'STATIC', width: 500, height: 200, mass: 1000000, angle: 10 }).mirror()\r\n\t)\r\n\tanimate.entities.push(\r\n\t\tnew Circle({ x: c.x, y: 0, mass: 10, vx: -.5 }),\r\n\t\tnew Rectangle({ pos: new Vector(c.x - 200, c.y + 200), physics: 'STATIC', width: 500, height: 200, mass: 1000000, angle: 10 })\r\n\t)\r\n\r\n\t/* animate.entities.push(\r\n\t\tnew Circle({ x: c.x, y: 0, mass: 10 }),\r\n\t\tnew Circle({ x: c.x, y: 100, mass: 10 }),\r\n\t\tnew Circle({ x: c.x, y: 200, mass: 10 }),\r\n\t\tnew Circle({ x: c.x, y: 300, mass: 10 }),\r\n\t\tnew Circle({ x: c.x, y: 400, mass: 10 }),\r\n\t\tnew Rectangle({ pos: new Vector(c.x - 200, c.y + 200), physics: 'STATIC', width: 500, height: 200, mass: 1000000, angle: 0 })\r\n\t) */\r\n\r\n\t/* for(let i = 0; i < 200; i++)\r\n\t\tanimate.entities.push(\r\n\t\t\tnew Point({ x: random(0, 2*c.x), y: random(0, 2*c.y) })\r\n\t\t) */\r\n}\r\n\r\nfunction animate() {\r\n\trequestAnimationFrame(animate)\r\n\tbackground('#000')\r\n\r\n\tanimate.entities.forEach(entity => {\r\n\t\tentity.gravity()\r\n\t})\r\n\r\n\tfor(let i = 0; i < animate.entities.length; i++)\r\n\t\tfor(let j = i+1; j < animate.entities.length; j++) {\r\n\t\t\tlet result = animate.entities[i].intersects(animate.entities[j],  true)\r\n\t\t\tresult.type === 'INTERSECTING' && animate.entities[i].collision(animate.entities[j], result)\r\n\t\t}\r\n\r\n\tanimate.entities.forEach(entity => entity.update())\r\n\tanimate.entities.forEach(entity => (entity.show(), stroke(entity.color)))\r\n\r\n\t\r\n}\r\n\r\ninit()\r\nanimate()\r\n","const preset = {\r\n    physics: {\r\n        constants: {\r\n            g: 1,\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default preset","import { ctx } from '../canvas'\r\nimport { fill, stroke } from './utils'\r\nimport { stdRotationFormula } from './formulas'\r\n\r\nexport function ellipse(x,y,radius) {\r\n\tctx.beginPath()\r\n\tctx.arc(x, y, radius, 0, Math.PI * 2, false)\r\n\tctx.closePath()\r\n}\r\n\r\nexport function rectangle(x, y, width, height) {\r\n\tctx.beginPath()\r\n\tctx.rect(x, y, width, height)\r\n\tctx.closePath()\r\n}\r\n\r\nexport function rotateRec(x, y, width, height, angle) {\r\n\trotate(() => {\r\n\t\tlet point = stdRotationFormula(x, y, angle)\r\n\t\trectangle(point.x, point.y, width, height)\r\n\t}, angle)\r\n}\r\n\r\nexport function point(x, y, weight) {\r\n\trectangle(x,y,weight,weight)\r\n}\r\n\r\nexport function line(x1, y1, x2, y2) {\r\n\tctx.beginPath()\r\n\tctx.moveTo(x1, y1)\r\n\tctx.lineTo(x2, y2)\r\n\tctx.closePath()\r\n}\r\n\r\nexport function polygon(points) {\r\n\tctx.beginPath()\r\n\r\n\tctx.moveTo(points[0].x, points[0].y)\r\n\tfor(let i = 0; i < points.length; i++) \r\n\t\tctx.lineTo(\r\n\t\t\tpoints[(i+1)%points.length].x, \r\n\t\t\tpoints[(i+1)%points.length].y\r\n\t\t)\r\n\t\r\n\tctx.closePath()\r\n}\r\n\r\nexport const rotate = (func, angle) => {\r\n\tctx.save()\r\n\tctx.rotate(angle)\r\n\tfunc()\r\n\tctx.restore()\r\n}","const defDegree = (180 / Math.PI)\r\n\r\nexport const pythagoras = ( dx, dy ) => Math.sqrt((dx**2) + (dy**2))\r\n\r\nexport const atanAngle = ( dx, dy ) => Math.atan2( dy, dx )\r\n\r\nexport const stdRotationFormula = (x, y, angle) => ({\r\n\t/**\r\n\t * y' = y*cos(a) + x*sin(a)\r\n\t * x' = -y*sin(a) + x*cos(a)\r\n\t */\r\n\tx: (y * Math.sin(angle)) + (x * Math.cos(angle)), \r\n\ty: (y * Math.cos(angle)) - (x * Math.sin(angle))\r\n})\r\n\r\n/**\r\n * @param {number} radian\r\n * \r\n * @returns {number} degree\r\n */\r\nexport const radianToDegree = radian => radian * defDegree\r\n\r\n/**\r\n * @param {number} degrees\r\n * \r\n * @returns {number} radian\r\n */\r\nexport const degreeToRadian = degrees => degrees * (1/defDegree)","import { canvas, ctx, colors } from \"../canvas\"\r\nimport { pythagoras } from \"./formulas\"\r\nimport { rectangle } from \"./draw\"\r\nimport AABB from \"../Strutures/Entities/types/AABB\"\r\nimport QuadTree from \"../Strutures/QuadTree\"\r\n\r\nexport const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\r\n\r\nexport const randomColor = () => colors[Math.floor(Math.random() * random(0, colors.length))]\r\n\r\nexport const distance = (x1, x2, y1, y2) => pythagoras(x1 - x2, y1 - y2)\r\nexport const CENTER = () => ({ x: canvas.width/2, y: canvas.height/2})\r\n\r\nexport const background = color => (rectangle(-canvas.width,-canvas.height,canvas.width*2,canvas.height*2), fillStyle(color), fill())\r\n\r\nexport const translate = (x, y) => ctx.translate(x, y)\r\n\r\nexport const fill = color => (fillStyle(color), ctx.fill())\r\nexport const stroke = color => (strokeStyle(color), ctx.stroke())\r\nexport const fillStyle = color => ctx.fillStyle = color\r\nexport const strokeStyle = color => ctx.strokeStyle = color\r\nexport const strokeWeight = number => ctx.lineWidth = number\r\n\r\nexport const getMousePosition = (e = window) => {\r\n    return [e.clientX - ctx.mozCurrentTransform[4], e.clientY - ctx.mozCurrentTransform[5]]\r\n}\r\n\r\nexport const constrain = (n, min, max) => n < min ? min : n > max ? max : n\r\n\r\nexport const getLargestEntityLength = (entities) =>\r\n    Math.max(...[...entities].map(entity => entity.radius ?? Math.max(entity.width, entity.height)))\r\n\r\nexport const minCollisionRange = (entity, range) => \r\n    new AABB({ \r\n        x: entity.middleX - (range + entity.halfWidth), \r\n        y: entity.middleY - (range + entity.halfHeight), \r\n        width: (range + entity.halfWidth)*2, \r\n        height: (range + entity.halfHeight)*2 \r\n    })\r\n\r\nexport const globalQuadTree = (capacity = 4) => \r\n    new QuadTree(\r\n        new AABB({\r\n            x: 0, y: 0, width: canvas.width, height: canvas.height\r\n        }), capacity\r\n    )\r\n\r\nexport const getClosestPoint = (point, points) => points.reduce((a, b) => distance(point.x, a.x, point.y, a.y) < distance(point.x, b.x, point.y, b.y)  ? a : b)"],"sourceRoot":""}